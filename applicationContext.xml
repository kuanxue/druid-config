<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- 引入db.properties中属性 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 配置数据源  org.apache.commons.dbcp.BasicDataSource com.alibaba.druid.pool.DruidDataSource-->
	<bean id="dataSource_admin" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	    <!-- 基本属性 url、user、password -->
	    <property name="url" value="${admin.jdbcUrl}" />
	    <property name="username" value="${admin.user}" />
	    <property name="password" value="${admin.password}" />
	    <!-- 配置初始化大小、最小、最大 -->
	    <property name="initialSize" value="1" />
	    <property name="minIdle" value="1" /> 
	    <property name="maxActive" value="20" />
	    <!-- 配置获取连接等待超时的时间 -->
	    <property name="maxWait" value="60000" />
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis" value="300000" />
	    <property name="validationQuery" value="SELECT 'x'" />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	    <property name="poolPreparedStatements" value="true" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	    <!-- 配置监控统计拦截的filters -->
	    <property name="filters" value="stat" /> 
	</bean>
	
	<bean id="sqlSessionFactory_admin" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource_admin" /> 
		<property name="configLocation" value="classpath:conf/sqlMapConfig_admin.xml"/>
	</bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.kuanxue.admin.persistence" />
    	<property name="sqlSessionFactory" ref="sqlSessionFactory_admin" />
    </bean>
	
    <!-- 配置事务管理器bean  transactionManager-->
	<tx:annotation-driven transaction-manager="transactionManager_admin"/>
    
	<bean id="transactionManager_admin" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_admin" />
	</bean>
	
	<!-- 配置druid监控-->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"></bean>

	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
	    <property name="patterns">
	        <list>
	            <value>com.kuanxue.admin.service.*</value>
	        </list>
	    </property>
	</bean>

	<aop:config>
	    <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>

	
	<!-- 下面是配置spring+Quartz定时任务，定时做推送任务 -->
	<!-- 要调度的对象 -->
	<bean id="pushJob" class="com.kuanxue.comm.job.PushTaskJob"></bean>
	
	<!-- 定义目标bean和bean中的方法 -->
	<bean id="pushJobBean" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref local="pushJob"/>
		</property>
		<property name="targetMethod">
			<value>createFestivalAndBirthdayTask</value>
		</property>
	</bean> 
	
	<!-- 定义触发的时间 -->
	<bean id="pushJobDotime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="pushJobBean"/>
		</property>
		<property name="cronExpression">
			<value>0 00 11 ? * *</value>
		</property>
	</bean>
	
	<!-- 总管理 启动定时 -->
	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="pushJobDotime"/>
			</list>
		</property>
	</bean>
	
<!-- 
		字段 允许值 允许的特殊字符
		秒 0-59 , - * /
		分 0-59 , - * /
		小时 0-23 , - * /
		日期 1-31 , - * ? / L W C
		月份 1-12 或者 JAN-DEC , - * /
		星期 1-7 或者 SUN-SAT , - * ? / L C #
		年（可选） 留空, 1970-2099 , - * /
		
		表达式意义
		"0 0 12 * * ?" 每天中午12点触发
		"0 15 10 ? * *" 每天上午10:15触发
		"0 15 10 * * ?" 每天上午10:15触发
		"0 15 10 * * ? *" 每天上午10:15触发
		"0 15 10 * * ? 2005" 2005年的每天上午10:15触发
		"0 * 14 * * ?" 在每天下午2点到下午2:59期间的每1分钟触发
		"0 0/5 14 * * ?" 在每天下午2点到下午2:55期间的每5分钟触发
		"0 0/5 14,18 * * ?" 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发
		"0 0-5 14 * * ?" 在每天下午2点到下午2:05期间的每1分钟触发
		"0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发
		"0 15 10 ? * MON-FRI" 周一至周五的上午10:15触发
		"0 15 10 15 * ?" 每月15日上午10:15触发
		"0 15 10 L * ?" 每月最后一日的上午10:15触发
		"0 15 10 ? * 6L" 每月的最后一个星期五上午10:15触发
		"0 15 10 ? * 6L 2002-2005" 2002年至2005年的每月的最后一个星期五上午10:15触发
		"0 15 10 ? * 6#3" 每月的第三个星期五上午10:15触发
		每天早上6点
		
		0 6 * * *
		
		每两个小时
		
		0 */2 * * *
		晚上11点到早上8点之间每两个小时，早上八点
		
		0 23-7/2，8 * * *
		
		每个月的4号和每个礼拜的礼拜一到礼拜三的早上11点
		
		0 11 4 * 1-3
		1月1日早上4点
		
		0 4 1 1 *
-->
</beans>